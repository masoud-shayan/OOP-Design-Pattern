
The Strategy pattern is used whenever a class needs to exhibit variant behavior depending on the state of an object. If 
this behavior can change at run time depending on the current state of the class, the Strategy pattern is a perfect fit 
for encapsulating this variant behavior.



In Strategy pattern, a class behavior or its algorithm can be changed at run time. This type of design pattern comes under
behavior pattern.

In Strategy pattern, we create objects which represent various strategies and a context object whose behavior varies as per 
its strategy object. The strategy object changes the executing algorithm of the context object.